# @package _global_

# specify here default configuration
# order of defaults determines the order in which configs override each other
defaults:
  - _self_
  - data: diffmotion_datamodule.yaml
  - model: diffmotion_module.yaml
  - callbacks: callbacks_trinity_diffusion.yaml
  - logger: wandb.yaml # set logger here or use command line (e.g. `python train.py logger=tensorboard`)
  - trainer: gpu.yaml
  - paths: trinity_diffmotion_path.yaml
  - extras: default.yaml
  - hydra: default.yaml

  # experiment configs allow for version control of specific hyperparameters
  # e.g. best hyperparameters for given model and datamodule
  - experiment: null

  # config for hyperparameter optimization
  - hparams_search: null

  # optional local config for machine/user specific settings
  # it's optional since it doesn't need to exist and is excluded from version control
  - optional local: default.yaml

  # debugging config (enable through command line, e.g. `python train.py debug=default)
  - debug: null

# task name, determines output directory path
task_name: "train"
use_auto_scale_batch_size: True
# tags to help you identify your experiments
# you can overwrite this in experiment configs
# overwrite from command line with `python train.py tags="[first_tag, second_tag]"`
tags: ["dev"]

# set False to skip model training
train: True

# evaluate on test set, using best model weights achieved during training
# lightning chooses best weights based on the metric specified in checkpoint callback
test: True

# compile model for faster training with pytorch 2.0
compile: False

# simply provide checkpoint path to resume training
# ckpt_path: ${paths.root_dir}/logs/train/multiruns/230512_220320/0_model.eps_theta_mod.mask_sel=dman/checkpoints/last.ckpt  # 20S-Multitest_GoodResult

ckpt_path: null


# seed for random number generators in pytorch, numpy and python.random
seed: null
#benchmark: True
#model_selection: 'conformer'  # 'informer', 'full_transformer'

profiler:
  _target_: pytorch_lightning.profilers.SimpleProfiler
#  extended: False
#  dirpath: ${paths.output_dir}/
#  filename: 'profiler'